<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UnexpectedError" xml:space="preserve">
    <value>An unexpected error occurred.</value>
  </data>
  <data name="FinishedSavingImages" xml:space="preserve">
    <value>Finished saving images to {0}</value>
  </data>
  <data name="Overwriting" xml:space="preserve">
    <value>Overwriting: {0}</value>
  </data>
  <data name="FileAlreadyExists" xml:space="preserve">
    <value>File already exists. Use --force to overwrite. Path: {0}</value>
  </data>
  <data name="ScannedImage" xml:space="preserve">
    <value>Scanned Image</value>
  </data>
  <data name="ExportingPage" xml:space="preserve">
    <value>Exporting page {0} of {1}.</value>
  </data>
  <data name="SuccessfullySavedPdf" xml:space="preserve">
    <value>Successfully saved PDF file to {0}</value>
  </data>
  <data name="DontHavePermission" xml:space="preserve">
    <value>You don't have permission to save files at this location.</value>
  </data>
  <data name="BeginningScan" xml:space="preserve">
    <value>Beginning scan...</value>
  </data>
  <data name="Waiting" xml:space="preserve">
    <value>Waiting {0}ms...</value>
  </data>
  <data name="StartingScan" xml:space="preserve">
    <value>Starting scan {0} of {1}...</value>
  </data>
  <data name="PagesScanned" xml:space="preserve">
    <value>{0} page(s) scanned.</value>
  </data>
  <data name="Exporting" xml:space="preserve">
    <value>Exporting...</value>
  </data>
  <data name="NAPS2" xml:space="preserve">
    <value>NAPS2</value>
  </data>
  <data name="NoPagesToExport" xml:space="preserve">
    <value>No scanned pages to export.</value>
  </data>
  <data name="ProfileUnavailableOrAmbiguous" xml:space="preserve">
    <value>The specified profile is unavailable or ambiguous.
Use the --profile option to specify a profile by name.</value>
  </data>
  <data name="Attaching" xml:space="preserve">
    <value>Attaching {0}...</value>
  </data>
  <data name="AttachingExportedPDF" xml:space="preserve">
    <value>Attaching the previously exported PDF...</value>
  </data>
  <data name="Emailing" xml:space="preserve">
    <value>Emailing...</value>
  </data>
  <data name="EmailNotSent" xml:space="preserve">
    <value>Email not sent.</value>
  </data>
  <data name="EmailSent" xml:space="preserve">
    <value>Email successfully sent.</value>
  </data>
  <data name="ErrorDeletingTempDir" xml:space="preserve">
    <value>An error occurred when trying to delete a temporary directory.</value>
  </data>
  <data name="ExportingImagesToAttach" xml:space="preserve">
    <value>Exporting images for use as an attachment...</value>
  </data>
  <data name="ExportingPDFToAttach" xml:space="preserve">
    <value>Exporting PDF for use as an attachment...</value>
  </data>
  <data name="NoPagesToEmail" xml:space="preserve">
    <value>No scanned pages to email.</value>
  </data>
  <data name="OutputOrEmailRequired" xml:space="preserve">
    <value>At least one of the -o/--output, -e/--email, or -a/--autosave options must be specified.</value>
  </data>
  <data name="SendingEmail" xml:space="preserve">
    <value>Sending email...</value>
  </data>
  <data name="ErrorImporting" xml:space="preserve">
    <value>Error importing file. Path: {0}</value>
  </data>
  <data name="ImportedFile" xml:space="preserve">
    <value>Imported file {0} of {1}.</value>
  </data>
  <data name="Importing" xml:space="preserve">
    <value>Importing...</value>
  </data>
  <data name="CouldntLoadEncryptionConfig" xml:space="preserve">
    <value>The encryption configuration file could not be loaded.</value>
  </data>
  <data name="ImportErrorNoPassword" xml:space="preserve">
    <value>The file could not be imported because it requires a password.
Use the "--importpassword" option.</value>
  </data>
  <data name="ImportErrorWrongPassword" xml:space="preserve">
    <value>The file could not be imported because the provided password was incorrect.</value>
  </data>
  <data name="ScannedPage" xml:space="preserve">
    <value>Scanned page {0}.</value>
  </data>
  <data name="ErrorSaving" xml:space="preserve">
    <value>An error occurred when trying to save the file.</value>
  </data>
  <data name="ExportingImage" xml:space="preserve">
    <value>Exporting image {0} of {1}...</value>
  </data>
  <data name="AutoSaving" xml:space="preserve">
    <value>Auto saving...</value>
  </data>
  <data name="AutoSaveNotEnabled" xml:space="preserve">
    <value>Auto save is not enabled for the specified profile.</value>
  </data>
  <data name="OutputOrEmailRequiredForImport" xml:space="preserve">
    <value>At least one of the -o/--output or -e/--email options must be specified if -i/--import is specified. Import does not work with -a/--autosave.</value>
  </data>
  <data name="ComponentAlreadyInstalled" xml:space="preserve">
    <value>The specified component is already installed.</value>
  </data>
  <data name="ComponentNeeded" xml:space="preserve">
    <value>An additional component is needed to perform this Operation. Run "NAPS2.Console --install {0}" to install it.</value>
  </data>
  <data name="ComponentNotAvailable" xml:space="preserve">
    <value>The specified component to install is not available. Check your spelling.</value>
  </data>
  <data name="Installing" xml:space="preserve">
    <value>Installing {0}...</value>
  </data>
</root>